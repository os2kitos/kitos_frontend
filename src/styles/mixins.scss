@use "@angular/material" as mat;
@import "theme";

@mixin input-background-white {
  background-color: white;
  border-radius: 10px;
}

@mixin elevation($el: 4, $color: $color-neutral-40) {
  @include mat.elevation($el, $color);
}

@mixin min-breakpoint {
  @media only screen and (max-width: $content-width-min) {
    @content;
  }
}

@mixin overview-flex-column-layout {
  display: flex;
  flex-direction: column;
  padding: $padding-large $padding-medium 0 $padding-medium;
}

@mixin page-flex-layout-max-width {
  display: flex;
  flex-direction: column;
  width: 100%;
}

@mixin page-flex-layout-max-width-hidden-overflow {
  display: flex;
  flex-direction: column;
  width: 100%;
  overflow: hidden;
}

@mixin mat-input-adjustment {
  --mdc-typography-subtitle1-font-size: var(--font-size);
  --mdc-typography-body1-font-size: var(--font-size);

  // Thicker border on focus
  &.mat-focused {
    .mat-mdc-text-field-wrapper {
      border: 2px solid $color-primary-80;
    }

    .mat-mdc-form-field-infix {
      margin: -1px;
    }

    .mat-mdc-form-field-icon-prefix {
      margin-left: -1px;
      margin-right: 1px;
    }

    .mat-mdc-form-field-icon-suffix {
      margin-right: -1px;
    }
  }

  // Disabled state
  &.mat-form-field-disabled {
    .mat-mdc-text-field-wrapper {
      border: 1px solid $color-neutral-40 !important;
      background-color: $color-neutral-10;

      .mat-mdc-form-field-infix input {
        color: $color-neutral-80;
      }
    }
    .mat-mdc-form-field-icon-prefix,
    .mat-mdc-form-field-icon-suffix {
      color: $color-neutral-80;
    }
  }

  // Wrapper border and color
  .mat-mdc-text-field-wrapper {
    border: 1px solid $color-neutral-40;
    border-radius: $radius-large;

    &:hover {
      border-color: $color-primary-80;
    }

    .mat-mdc-form-field-infix {
      height: var(--height);
      min-height: var(--height);
      padding-top: var(--offset);

      textarea {
        color: $color-neutral;
        font-size: --font-size;
        line-height: 150%;
        backface-visibility: hidden;
        -webkit-font-smoothing: auto;
      }

      input {
        color: $color-neutral;
        backface-visibility: hidden;
        -webkit-font-smoothing: auto;
      }
    }
  }

  // Remove ripple underline
  .mdc-line-ripple {
    display: none;
  }

  // Transparent background
  .mdc-text-field {
    background-color: transparent;
  }

  // Invalid state border color
  .mdc-text-field--invalid {
    border-color: $color-negative !important;
  }

  // No focus overlay
  .mat-mdc-form-field-focus-overlay {
    opacity: 0 !important;
  }

  // Floating label adjustments
  .mat-mdc-form-field-flex .mdc-floating-label {
    top: calc(var(--offset) * 1.4);
    color: $color-neutral-80 !important;
    transition: none;
    will-change: unset;

    &--required {
      display: none;
    }

    &--float-above {
      top: calc(var(--offset) * 0.4);
      color: $color-neutral-dark !important;
      font-weight: bold;
      transform: scale(var(--scale));
      backface-visibility: hidden;
      -webkit-font-smoothing: auto;
    }
  }

  // Prefix and suffix padding
  .mat-mdc-form-field-icon-prefix {
    padding-left: $padding-medium;
    padding-right: $padding-small;
  }

  .mat-mdc-form-field-icon-suffix {
    padding-right: $padding-medium;
  }

  // Hide input number spinners
  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type="number"] {
    appearance: none;
    -moz-appearance: textfield;
  }

  // Remove empty spacing below field
  .mat-mdc-form-field-bottom-align::before {
    content: unset;
  }
}

@mixin ng-select-adjustment() {
  padding-bottom: 0;

  // Customization of dropdown container styling
  .ng-select-container {
    height: var(--height);
    min-height: var(--height);
    padding: 1px;
    border: 1px solid $color-neutral-40;
    border-radius: $radius-large;
    cursor: pointer;

    &:hover {
      border-color: $color-primary-80;
    }

    &::after {
      content: initial;
    }

    .ng-value-container {
      padding: 0 $padding-medium;
      border-top: var(--offset) solid transparent;

      .ng-placeholder {
        color: $color-neutral-80;
      }

      .ng-value {
        position: absolute;
        bottom: var(--bottom);
        color: $color-neutral;
        overflow: hidden;
        text-overflow: ellipsis;

        .ng-value-label {
          overflow: hidden;
          text-overflow: ellipsis;
        }
      }

      .ng-input {
        bottom: var(--bottom);
        padding: 0 $padding-medium;

        input {
          cursor: pointer;
          font-size: var(--font-size);
          caret-color: $color-primary;
        }
      }
    }

    .ng-spinner-loader {
      align-self: center;
    }

    .ng-clear-wrapper {
      display: flex;
      height: 100%;
      align-items: center;
      bottom: 0 !important;
    }
  }

  // Adjustments for focused 2px border
  &.ng-select-focused {
    .ng-select-container {
      border: 2px solid $color-primary-80;
      padding: 0;
    }

    .ng-value-container {
      .ng-placeholder {
        top: calc(var(--bottom) - 1px);
      }

      .ng-value {
        bottom: calc(var(--bottom) - 1px);
      }

      .ng-input {
        bottom: calc(var(--bottom) - 1px);
      }
    }
  }

  //Error state border color
  &.ng-invalid.ng-touched {
    .ng-select-container {
      border-color: $color-negative;
    }
  }

  // Custom scaling and positioning of active placeholder
  &.ng-select-focused,
  &.ng-select-opened,
  .ng-has-value {
    .ng-placeholder {
      top: var(--bottom);
      color: $color-neutral-dark !important;
      font-weight: bold;
      transform: scale(var(--scale)) !important;
      transition: none !important;
      backface-visibility: hidden;
      -webkit-font-smoothing: auto;
    }
  }

  // Custom dropdown icon
  .ng-arrow-wrapper {
    height: 100%;
    width: var(--height);
    background-color: $color-primary-darker;
    mask-image: url("../app/shared/components/icons/chevron-down.svg");
    mask-repeat: no-repeat;
    mask-position: 50%;
    bottom: 0 !important;

    .ng-arrow {
      display: none;
    }
  }

  // Custom disabled state
  &.ng-select-disabled {
    .ng-select-container {
      background-color: $color-neutral-10;
      cursor: default;

      input {
        cursor: default !important;
      }

      .ng-value-container .ng-placeholder {
        color: $color-neutral-80;
      }

      .ng-value-container .ng-value {
        color: $color-neutral-80;
      }

      &:hover {
        border-color: $color-neutral-40;
      }

      .ng-arrow-wrapper {
        visibility: hidden;
      }
    }
  }

  // Custom dropdown menu styling
  ng-dropdown-panel {
    &.ng-select-top {
      bottom: calc(100% + $padding-small);
    }

    &.ng-select-bottom {
      top: calc(100% + $padding-small);
    }

    &.ng-select-bottom,
    &.ng-select-top {
      border-radius: $radius-large;
      padding: $padding-smaller;

      .ng-option {
        border-radius: 6px;
        white-space: normal !important;
        line-break: normal !important;

        &.ng-option-marked,
        &.ng-option-selected {
          background: $color-primary-10;
          color: $color-neutral-dark;
        }
      }
    }

    .ng-dropdown-footer {
      min-height: unset;
    }
  }
}

@mixin ng-select-default-style() {
  :host {
    flex: 1;
  }

  :host ::ng-deep ng-select {
    &.medium {
      --height: 48px;
      --font-size: 14px;
      --bottom: 2px;
      --offset: 8px;
      --scale: calc(12 / 14);
    }

    &.large {
      --height: 56px;
      --font-size: 16px;
      --bottom: 8px;
      --offset: 14px;
      --scale: calc(12 / 16);
    }

    @include ng-select-adjustment;
  }
}

@mixin mat-textbox-input-adjustment() {
  height: var(--height);
}

@mixin mat-textbox-overflow-adjustment() {
  ::ng-deep .mat-mdc-form-field-flex > .mat-mdc-form-field-infix {
    overflow: hidden;
  }
}

@mixin mat-form-sizes() {
  &.medium {
    --height: 48px;
    --font-size: 14px;
    --offset: 17px;
    --scale: calc(12 / 14);
  }

  &.large {
    --height: 56px;
    --font-size: 16px;
    --offset: 20px;
    --scale: calc(12 / 16);
  }
}

@mixin grid-style() {
  kendo-grid {
    border-radius: $radius-large;
    border-color: transparent;
    height: $content-height;
  }

  .loading-container {
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .items-center-container {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  :host ::ng-deep {
    td {
      overflow: visible !important;
    }

    tr {
      cursor: pointer;

      app-status-chip {
        cursor: pointer;
      }
    }

    .k-column-title {
      color: $color-primary-dark;
    }

    .k-sort-icon {
      color: $color-primary-dark;
      margin-top: -$padding-smaller;
    }

    .k-filter-row {
      background-color: $color-white !important;
    }

    .k-grid-header,
    .k-grid-header .k-header {
      background-color: $color-white !important;
    }

    .k-grid-header .k-header {
      height: 64px;
      padding: 0px 16px;
    }

    .k-column-title {
      color: $color-primary-dark !important;
      font-weight: bold;
    }

    .k-grid-header .mygrid-header-cell {
      text-align: center;
      display: table-cell;
      vertical-align: middle;
    }

    .k-grid td {
      border-bottom: 1px solid $color-neutral-20;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .k-svg-i-sort-desc-small,
    .k-svg-i-sort-asc-small {
      display: none !important;
    }

    kendo-pager {
      border-top: 1px solid $color-neutral-20;
      background-color: $color-white !important;
      padding: $padding-small $padding-medium;
    }

    .k-grid tbody tr {
      height: 63px !important;
      position: relative;
    }

    .k-grid-header td.k-grid-header-sticky,
    .k-grid-header .k-table-td.k-grid-header-sticky {
      background-color: $color-white !important;
      border-left: 1px solid $color-neutral-20;
      border-right: 0;
    }

    .k-grid .k-table .k-grid-content-sticky {
      border-left: 1px solid $color-neutral-20;
      border-right: 0;
    }

    .k-grid-header .k-table-th.k-grid-header-sticky {
      border-left: 1px solid $color-neutral-20;
      border-right: 0;
    }

    .k-grid tbody > tr:hover td:first-child {
      position: relative;
      overflow: visible;
    }

    .k-grid tbody > tr:hover td:first-child::before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      height: 100%;
      width: 5px;
      background-color: $color-primary-base;
      border-top-right-radius: 10px;
      border-bottom-right-radius: 10px;
      z-index: 1;
      display: block;
    }
  }
  .column-title {
    color: $color-primary-dark !important;
    font-weight: bold;
  }

  .sort-icon {
    ::ng-deep svg {
      width: 18px;
      height: 18px;
    }
  }

  .paragraph {
    line-height: 100%;
    font-size: 14px;
    color: $color-neutral-dark;
  }

  .wrap-on-overflow {
    overflow: hidden;
    text-overflow: clip;
    white-space: normal;
    word-wrap: break-word;
  }

  .bold-font {
    font-weight: bold;
  }

  .column-center-content {
    display: flex;
    justify-content: center;
    width: 100%;
  }

  .dropdown-inline-display {
    display: inline !important;
  }

  .action-buttons-container {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
  }
}

@mixin dialog-footer-no-padding() {
  .dialog-footer {
    background-color: $color-white;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    box-sizing: border-box;
    position: sticky;
    bottom: 0;
    z-index: 10;
  }
}

@mixin dialog-footer-with-padding {
  @include dialog-footer-no-padding;

  :host ::ng-deep {
    .content {
      padding-bottom: 0 !important;
    }
  }

  .dialog-footer {
    padding-bottom: $padding-large + 1;
  }
}
